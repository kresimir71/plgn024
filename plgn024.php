<?php
/**
 * Plugin mainfile.
 *
 * @link              none
 * @since             none
 * @package           none
 *
 * @wordpress-plugin
 * Plugin Name:       Plgn Template 024
 * Plugin URI:        https://github.com/kresimir71/plugin024
 * Description:       This plugin instance was generated by the WordPress Plugin Boilerplate Generator. It serves as a starting point for your plugin development journey, providing a basic structure and framework to build upon. Please note that this instance is a template starter and does not include specific functionality or detailed descriptions. You are encouraged to customize and expand upon this foundation to meet the unique requirements of your project. With the flexibility and versatility of the WordPress Plugin Boilerplate Generator, you can accelerate the development process and create powerful plugins that enhance the functionality and usability of WordPress websites.
 * Version:           1.0.0
 * Requires at least: 6.0
 * Requires PHP:      7.0
 * Author:            K.Karamazen
 * Author URI:        https://www.facebook.com/kresimir.karamazen
 * License:           GPL-2.0+
 * License URI:       http://www.gnu.org/licenses/gpl-2.0.txt
 * Text Domain:       plgn024
 * Domain Path:       /languages
 */

// If this file is called directly, abort.
if ( ! defined( 'WPINC' ) ) {
	die;
}

define( 'PLGN024_VER', '4.0.13' );

defined( 'PLGN024_MAIN_FILE' ) || define( 'PLGN024_MAIN_FILE', __FILE__ );

defined( 'PLGN024_BASENAME' ) || define( 'PLGN024_BASENAME', plugin_basename( PLGN024_MAIN_FILE ) );

define( 'PLGN024_DIR', untrailingslashit( plugin_dir_path( __FILE__ ) ) );

define( 'PLGN024_URL', untrailingslashit( plugins_url( '', __FILE__ ) ) );

/**
 * Include autoloader.
 */
require PLGN024_DIR . '/autoload.php';

/**
 * The code that runs during plugin activation.
 * This action is documented in includes/class-plgn024-activator.php
 */
function activate_plgn024() {
	\Plgn024\Core\includes\Activator::activate();
}

/**
 * The code that runs during plugin deactivation.
 * This action is documented in includes/class-plgn024-deactivator.php
 */
function deactivate_plgn024() {
	\Plgn024\Core\includes\Deactivator::deactivate();
}

register_activation_hook( __FILE__, 'activate_plgn024' );
register_deactivation_hook( __FILE__, 'deactivate_plgn024' );

/**
 * Begins execution of the plugin and acts as the main instance of Plgn024.
 *
 * Returns the main instance of Plgn024 to prevent the need to use globals.
 *
 *
 * Since everything within the plugin is registered via hooks,
 * then kicking off the plugin from this point in the file does
 * not affect the page life cycle.
 *
 * @since    1.0.0
 *
 * @return \Plgn024\Core\includes\Main
 */
function PLGNMAIN024() { // phpcs:ignore
	return \Plgn024\Core\includes\Main::instance();
}

use Plgn024\Core\includes\Requirements;

if ( Requirements::satisfied() ) {
	// Fire.
	PLGNMAIN024()->init();

	define( 'PLGN024_LOADED', true );
} else {
	add_filter( 'after_plugin_row_' . PLGN024_BASENAME, [ Requirements::class, 'display_requirements' ] );
}
